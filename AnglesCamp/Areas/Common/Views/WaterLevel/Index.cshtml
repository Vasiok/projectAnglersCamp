@model IEnumerable<BOL.WaterLevel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="topDistance">Current Water Levels</h2>

<ul class="nav nav-pills">
    <li class="active">@Html.ActionLink("County", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : (ViewBag.SortOrder == "ASC" ? "DESC" : "ASC")), SortBy = "County", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })</li>
    <li class="active">@Html.ActionLink("Name", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : (ViewBag.SortOrder == "ASC" ? "DESC" : "ASC")), SortBy = "Name", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })</li>
    <li class="active">@Html.ActionLink("Water Body", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : (ViewBag.SortOrder == "ASC" ? "DESC" : "ASC")), SortBy = "Water Body", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })</li>
    <li class="active">@Html.ActionLink("Current Level", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : (ViewBag.SortOrder == "ASC" ? "DESC" : "ASC")), SortBy = "Current Level", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })</li>
    <li class="active">@Html.ActionLink("Fishable", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : (ViewBag.SortOrder == "ASC" ? "DESC" : "ASC")), SortBy = "Fishable", page = (ViewBag.Page == null ? "1" : ViewBag.Page) })</li>
</ul>

<table class="table table-striped table-hover">
    <tr class="info">
        <th>
            @Html.DisplayNameFor(model => model.County)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaterBody)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WaterLevel1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AWaterLevel)
        </th>    
       
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.County)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaterBody)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WaterLevel1)
            </td>
            <td>
                @if(item.AWaterLevel == "GOOD")
                {
                    <span class="alert-success">@Html.DisplayFor(modelItem => item.AWaterLevel)</span>
                }
                @if (item.AWaterLevel == "HIGH WATER")
                {
                    <span class="alert-danger">@Html.DisplayFor(modelItem => item.AWaterLevel)</span>
                }
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.AWaterLevel)
            </td>*@
            
        </tr>
    }

</table>
@{
    double TotalPages = ViewBag.TotalPages;
}
<ul class="pagination">
    @for (int i = 1; i <= TotalPages; i++)
    {
        if (i == ViewBag.Page)
        {
            <li class="active">@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "County" : ViewBag.SortBy), Page = i })</li>
        }
        else
        {
            <li>@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "ASC" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "County" : ViewBag.SortBy), Page = i })</li>
        }

    }
</ul>

